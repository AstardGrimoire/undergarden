public net.minecraft.world.entity.Entity collide(Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3;

public net.minecraft.world.level.block.NetherPortalBlock getDimensionTransitionFromExit(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/portal/DimensionTransition$PostDimensionTransition;)Lnet/minecraft/world/level/portal/DimensionTransition;
public net.minecraft.world.level.block.SpreadingSnowyDirtBlock canBeGrass(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z
public net.minecraft.world.level.block.VineBlock hasFaces(Lnet/minecraft/world/level/block/state/BlockState;)Z
public net.minecraft.world.level.block.VineBlock getUpdatedState(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;
public net.minecraft.world.level.block.TransparentBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V

public net.minecraft.client.particle.Particle gravity
public net.minecraft.client.particle.DripParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V
public net.minecraft.client.particle.DripParticle$DripHangParticle
public net.minecraft.client.particle.DripParticle$DripHangParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/particles/ParticleOptions;)V
public net.minecraft.client.particle.DripParticle$FallAndLandParticle
public net.minecraft.client.particle.DripParticle$FallAndLandParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/particles/ParticleOptions;)V
public net.minecraft.client.particle.DripParticle$DripLandParticle
public net.minecraft.client.particle.DripParticle$DripLandParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V

public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType <init>(Lcom/mojang/serialization/MapCodec;)V
public net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType <init>(Lcom/mojang/serialization/MapCodec;)V
public net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType <init>(Lcom/mojang/serialization/MapCodec;)V
public net.minecraft.world.level.levelgen.NoiseRouterData SHIFT_X
public net.minecraft.world.level.levelgen.NoiseRouterData Y
public net.minecraft.world.level.levelgen.NoiseRouterData SHIFT_Z
public net.minecraft.world.level.levelgen.NoiseRouterData getFunction(Lnet/minecraft/core/HolderGetter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction;
public-f net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator globalFluidPicker
public net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator settings

public net.minecraft.data.worldgen.placement.OrePlacements commonOrePlacement(ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List;
public net.minecraft.data.loot.BlockLootSubProvider doesNotHaveShearsOrSilkTouch()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;
public net.minecraft.world.entity.item.PrimedTnt owner
public net.minecraft.world.level.block.FireBlock setFlammable(Lnet/minecraft/world/level/block/Block;II)V
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource;
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;

public net.minecraft.world.level.levelgen.feature.DripstoneUtils getDripstoneHeight(DDDD)D
public net.minecraft.world.level.levelgen.feature.DripstoneUtils isCircleMostlyEmbeddedInStone(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;I)Z

public net.minecraft.client.gui.Gui healthBlinkTime
public net.minecraft.client.gui.Gui lastHealth
public net.minecraft.client.gui.Gui lastHealthTime
public net.minecraft.client.gui.Gui displayHealth
public net.minecraft.client.gui.Gui random
public net.minecraft.client.gui.Gui$HeartType
public net.minecraft.client.model.HumanoidModel poseRightArm(Lnet/minecraft/world/entity/LivingEntity;)V
public net.minecraft.client.model.HumanoidModel poseLeftArm(Lnet/minecraft/world/entity/LivingEntity;)V
public net.minecraft.client.model.HumanoidModel getAttackArm(Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm;
public net.minecraft.client.gui.Gui renderExperienceBar(Lnet/minecraft/client/gui/GuiGraphics;I)V
public net.minecraft.client.gui.Gui renderTextureOverlay(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;F)V

public net.minecraft.data.advancements.packs.VanillaAdventureAdvancements addBiomes(Lnet/minecraft/advancements/Advancement$Builder;Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder;

public net.minecraft.client.renderer.LevelRenderer skyBuffer
public net.minecraft.client.renderer.LevelRenderer starBuffer
public net.minecraft.client.renderer.LevelRenderer darkBuffer

public net.minecraft.client.renderer.LevelRenderer prevCloudX
public net.minecraft.client.renderer.LevelRenderer prevCloudY
public net.minecraft.client.renderer.LevelRenderer prevCloudZ
public net.minecraft.client.renderer.LevelRenderer prevCloudsType
public net.minecraft.client.renderer.LevelRenderer prevCloudColor
public net.minecraft.client.renderer.LevelRenderer generateClouds
public net.minecraft.client.renderer.LevelRenderer cloudBuffer
public net.minecraft.client.renderer.LevelRenderer buildClouds(Lcom/mojang/blaze3d/vertex/Tesselator;DDDLnet/minecraft/world/phys/Vec3;)Lcom/mojang/blaze3d/vertex/MeshData;